# -*- coding: utf-8 -*-
"""Python Singly Linked List

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RPiWdj5gk3rft4pAMSpJcwtRyKI4xBaS
"""

# Membuat class untuk node dalam linked list
class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

# Membuat class untuk linked list
class LinkedList:
    def __init__(self):
        self.head = None
    
    # Menambahkan elemen pada linked list
    def insert_at_start(self, data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
            return
        last_node = self.head
        while last_node.next is not None:
            last_node = last_node.next
        last_node.next = new_node

        #Menambah sebelum data lain  
    def insert_before(self, target_data, new_data):
        new_node = Node(new_data)
        if self.head is None:
            self.head = new_node
        elif self.head.data == target_data:
            new_node.next = self.head
            self.head = new_node
        else:
            current_node = self.head
            while current_node.next is not None:
                if current_node.next.data == target_data:
                    new_node.next = current_node.next
                    current_node.next = new_node
                    return
                current_node = current_node.next
            print("Data not found")

    
    # Menghapus elemen dari linked list
    def remove_element(self, key):
        current_node = self.head
        if current_node is not None and current_node.data == key:
            self.head = current_node.next
            current_node = None
            return
        prev_node = None
        while current_node is not None and current_node.data != key:
            prev_node = current_node
            current_node = current_node.next
        if current_node is None:
            return
        prev_node.next = current_node.next
        current_node = None
    
    # Menampilkan elemen dari linked list
    def display_list(self):
        current_node = self.head
        while current_node is not None:
            print(current_node.data)
            current_node = current_node.next

# Membuat linked list dan menambahkan beberapa elemen
linked_list = LinkedList()
linked_list.insert_at_start("apple")
linked_list.insert_at_start("banana")
linked_list.insert_at_start("cherry")

# Menampilkan linked list sebelum penghapusan
print("Sebelum penghapusan:")
linked_list.display_list()

# Menambah sebelum data lain
linked_list.insert_before("banana", "durian")
print("\nSetelah menambah sebelum data lain:")
linked_list.display_list()

# Menghapus elemen "banana" dari linked list
linked_list.remove_element("banana")

# Menampilkan linked list setelah penghapusan
print("\nSetelah penghapusan:")
linked_list.display_list()